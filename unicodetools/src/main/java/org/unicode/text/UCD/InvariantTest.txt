[$script:Zzzz] = [[$gc:cn][$gc:co][$noncharactercodepoint]]

stop
Show [$Noncharacter_Code_Point]

Show [$XID_Continue - $ID_Continue]
Show [$ID_Continue - $XID_Continue]

Show [$XID_Start - $ID_Start]
Show [$ID_Start - $XID_Start]

stop 
Let $remove = [ \u06fd-\u06fe \u0f01-\u0f03 \u0f13-\u0f17 \u0f1a-\u0f1f \u0fbe-\u0fc5 \u0fc7-\u0fcc \u2100-\u2101 \u2104-\u2106 \u2108-\u2109 \u2117-\u2118 \u211e-\u2121 \u2195-\u2199 \u219c-\u219f \u21a1-\u21a2 \u21a4-\u21a5 \u21a7-\u21ad \u21af-\u21cd \u21d0-\u21d1 \u21d5-\u21f3 \u2300-\u2307 \u230c-\u231f \u2322-\u2328 \u232b-\u237b \u237d-\u239a \u2400-\u2426 \u2440-\u244a \u249c-\u24e9 \u2500-\u25b6 \u25b8-\u25c0 \u25c2-\u25f7 \u2600-\u2613 \u2619-\u266e \u2670-\u2671 \u2701-\u2704 \u2706-\u2709 \u270c-\u2727 \u2729-\u274b \u274f-\u2752 \u2758-\u275e \u2761-\u2794 \u2798-\u27af \u27b1-\u27be \u2800-\u28ff \u2e80-\u2e99 \u2e9b-\u2ef3 \u2f00-\u2fd5 \u2ff0-\u2ffb \u3012-\u3013 \u3036-\u3037 \u303e-\u303f \u3190-\u3191 \u3196-\u319f \u3200-\u321c \u322a-\u3243 \u3260-\u327b \u328a-\u32b0 \u32c0-\u32cb \u32d0-\u32fe \u3300-\u3376 \u337b-\u33dd \u33e0-\u33fe \ua490-\ua4a1 \ua4a4-\ua4b3 \ua4b5-\ua4c0 \ua4c2-\ua4c4 \uffed-\uffee \ufffc-\ufffd \u0482 \u06e9 \u09fa \u0b70 \u0f34 \u0f36 \u0f38 \u0fcf \u2114 \u2123 \u2125 \u2127 \u2129 \u212e \u2132 \u213a \u21d3     \u220e     \u2617 \u274d \u2756 \u3004 \u3020 \u327f \ua4c6 \uffe4 \uffe8] 
ShowScript
Show $remove

Show [^$remove $gc:Cn $gc:Co]

stop
# get the basic set
Let $baseId = [$gc:Lu $gc:Ll $gc:Lt $gc:Lo $gc:Lm $gc:Mc $gc:Mn $gc:Nd]

# only keep characters that are case-stable and NFKC, and not default-ignorable
Let $filteredID = [$baseId & $case_stable - $nfkcquickcheck:No - $defaultIgnorableCodePoint]

# but add back special exceptions
Let $filtered = [$filtered [-a-zA-Z\u200C\u200D]]

# Historic scripts and technical symbols
Let $historicScripts = [$sc:Xsux $sc:Ugar $sc:Xpeo $sc:Goth $sc:Ital $sc:Cprt $sc:Linb $sc:Phnx $sc:Khar $sc:Phag $sc:Glag $sc:Shaw $sc:Dsrt]
Let $dropList = [$block:CombiningDiacriticalMarksForSymbols $block:MusicalSymbols $block:AncientGreekMusicalNotation]

# Show results of removing historical scripts & technical symbols 
Let $modernID = [$filteredID - $historicScripts - $dropList]
ShowScript
Show $modernID

# Show what we pulled out
Show [$filteredID - $modernID]

# Show a list of all the characters not currently allowed
Show [$modernID - $IdnOutput]

# Show a detailed list of all the characters, excluding the big alphabets: Han, Hangul, Cuneiform, Linear-B, Yi
Let $bigScripts = [$sc:Hani $sc:Hang $sc:Xsux $sc:Linb $sc:Yiii]
ShowEach [$modernID - $bigScripts]

Stop

Show [[:block=tamil:] & [:age=3.2:] - [:age=3.1:]]
Show [[:block=tamil:] & [:age=4.0:] - [:age=3.2:]]
Show [[:block=tamil:] & [:age=4.1:] - [:age=4.0:]]
Show [[:block=tamil:] & [:age=5.0:] - [:age=4.1:]]

Stop

Show [[:NFKCQuickCheck=No:] & [$gc:Lm]]

Stop

[$Name:  $gc:Sk]
[$Name:  $gc:Lm]

Show [[$whitespace] - [$gc:zs]]
Show [[$gc:zs] - [$whitespace]]

Let $letter = [$gc:Lu $gc:Ll $gc:Lt $gc:Lo $gc:Lm];
Let $number = [$gc:Nd $gc:Nl $gc:No]
Let $mark = [$gc:mn $gc:me $gc:mc]
Let $LMN = [$letter $number $mark]
Let $gcAllPunctuation = [$gc:Open_Punctuation $gc:Close_Punctuation $gc:Dash_Punctuation $gc:Connector_Punctuation $gc:Other_Punctuation $gc:Initial_Punctuation $gc:Final_Punctuation]
Let $gcAllSymbols = [$gc:Currency_Symbol $gc:Modifier_Symbol $gc:Math_Symbol $gc:Other_Symbol]
Let $nfc = [^$NFC_Quick_Check:No]

Show $nfc

Show [$alphabetic - [$mark $letter $number]]


Let $oldCJK = [\u1100-\u11FF \u3040-\u30FF \u3130-\u318F \u31F0-\u31FF \u3400-\u4DBF \u4E00-\u9FFF \uAC00-\uD7AF \uF900-\uFAFF \uFF65-\uFFDC]

Show [$oldCJK & $gc:cn]

Let $fixedOld = [$oldCJK-$gc:cn]


#List the non-alphabetic old items
#Show [$oldCJK-$gc:cn-$alphabetic]

#Check for differences
#Test $fixedOld = $trialNew

#ShowEach $mark

Let $uax29_outliers = [\u3031-\u3035 \u309B-\u309C \u30A0 \u30FC \uFF70 \uFF9E-\uFF9F]
Let $other_outliers = [\u3099-\u309A \u3006 \u303C \u302A-\u302E \u302F \U000E0100-\U000E01EF]

# ==========================================

# Outliers from UAX29
Show $uax29_outliers

# Additional outliers
Show $other_outliers

# Take the 5 CJK scripts
Let $trialScripts = [$script:hani $script:hang $script:kana $script:hira $script:bopo]

# Remove the non-LMN
Let $trialNewBase = [$trialScripts & $LMN]

# Add the outliers
Let $trialNew = [$trialNewBase $uax29_outliers $other_outliers]

# Show our result
Show $trialNew

# As a double-check, show script characters we're tossing
Show [$trialScripts - $trialNew]

# Compare snippets stuff
Let $guessClose = [$lb:QU $lb:Close_Punctuation]
Let $__closing_punc = ["')>\]`\}\u00AB\u00BB\u2018\u2019\u201C\u201D\u2039\u203A\u207E\u208E\u27E7\u27E9\u27EB\u2984\u2986\u2988\u298A\u298C\u298E\u2990\u2992\u2994\u2996\u2998\u29D9\u29DB\u29FD\u3009\u300B\u300D\u300F\u3011\u3015\u3017\u3019\u301B\u301E\u301F\uFD3F\uFE42\uFE44\uFE5A\uFE5C\uFF02\uFF07\uFF09\uFF3D\uFF5D\uFF63]

$guessClose = $__closing_punc

Let $guessClose = [$gc:pf $gc:pe $gc:pi]
$guessClose = $__closing_punc

Let $guessTerm = [$sb:aterm $sb:sterm]
$guessTerm = [? ? !?? ? ? ? ? ??? ? ? ? ? ? ? ? .?? � ? ? ? ? ? ? ? ?? ? ? ? ? ? ? ?]

Let $__issymotherr = [\u00A6\u00A7\u06FD\u06FE\u0F01-\u0F03\u0F13-\u0F17\u0F1A-\u0F1F\u0FBE-\u0FC5\u0FC7-\u0FCC\u2100\u2101\u2104-\u2106\u2108\u2109\u2117\u2118\u211E-\u2121\u2195-\u2199\u219C-\u219F\u21A1\u21A2\u21A4\u21A5\u21A7-\u21AD\u21AF-\u21CD\u21D0\u21D1\u21D5-\u21F3\u2300-\u2307\u230C-\u231F\u2322-\u2328\u232B-\u237B\u237D-\u239A\u2400-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u25B6\u25B8-\u25C0\u25C2-\u25F7\u2600-\u2613\u2619-\u266E\u2670\u2671\u2701-\u2704\u2706-\u2709\u270C-\u2727\u2729-\u274B\u274F-\u2752\u2758-\u275E\u2761-\u2794\u2798-\u27AF\u27B1-\u27BE\u2800-\u28FF\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFB\u3012\u3013\u3036\u3037\u303E\u303F\u3190\u3191\u3196-\u319F\u3200-\u321C\u322A-\u3243\u3260-\u327B\u328A-\u32B0\u32C0-\u32CB\u32D0-\u32FE\u3300-\u3376\u337B-\u33DD\u33E0-\u33FE\uA490-\uA4A1\uA4A4-\uA4B3\uA4B5-\uA4C0\uA4C2-\uA4C4\uFFED\uFFEE\uFFFC\uFFFD]
Let $__issymothers = [\u00B6\u0482\u06E9\u09FA\u0B70\u0F34\u0F36\u0F38\u0FCF\u2114\u2123\u2125\u2127\u2129\u212E\u2132\u213A\u21D3\u220E\u2617\u274D\u2756\u3004\u3020\u327F\uA4C6\uFFE4\uFFE8]

Let $symOther = [$__issymotherr $__issymothers]

$symOther = $gcAllSymbols


[$symOther & $nfc] = [$gcAllSymbols & $nfc]


#MY TEST
#Show [$gc:Mn - $Alphabetic]
#Show [$Alphabetic & $gc:Mn]

# Try removing M* from alphabetic, and matching to SA
#Show [$SAScripts & [$Alphabetic $gc:cf - $gcAllMarks]] = $LineBreak:SA

# Try adding M* to alphabetic, and matching to SA
#Show [$SAScripts & [$Alphabetic $gc:cf $gcAllMarks]] = $LineBreak:SA

# testing
# [$Pattern_Whitespace $Pattern_Syntax] ! [[^$WB:Format $WB:Other] \u2019 \u0027 \u02BC \u002d \u00ad \u2027 \u058A]
Let $otherword = [\u2019 \u0027 \u02BC \u002d \u00ad \u2027 \u058A]
Let $currentword = [[^$WB:Format $WB:Other $WB:MidNum] $Grapheme_Extend $alphabetic]
Show [$currentword $otherword - $ID_Continue]
Show [$currentword $otherword - [$alphabetic $anyNumericValue $gcAllMarks]]
Show [$otherword - $currentword]
Show [$name:«.*LETTER.*» - $alphabetic]
