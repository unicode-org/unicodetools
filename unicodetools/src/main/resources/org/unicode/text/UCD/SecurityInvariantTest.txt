# Invariant tests for UTS #39 data.
# These tests are separate from the UCD tests in UnicodeInvariantTest.txt to
# allow for UCD development ahead of UTS #39 development, from recommendation
# for provisional assignment up to and including α.

# https://www.unicode.org/reports/tr39/#Identifier_Status_and_Type

# “Unassigned characters, private use characters, surrogates, non-whitespace control characters.”
\p{Identifier_Type=Not_Character} = [\p{gc=Cn}\p{gc=Co}\p{gc=Cs}\p{gc=Cc}-\p{White_Space}]

# “Multiple values are not assigned to characters with strong restrictions:
# Not_Character, Deprecated, Default_Ignorable, Not_NFKC.”
\p{Identifier_Type=Deprecated} = \p{Deprecated}

# When a code point fits the criteria for multiple restrictions, then the strongest one wins.
# For example, Default_Ignorable is trumped by unassigned and Deprecated.
\p{Identifier_Type=Default_Ignorable} = [\p{Default_Ignorable_Code_Point}-\p{gc=Cn}-\p{Deprecated}]

\p{Identifier_Type=Not_NFKC} = [\p{NFKC_QC=No}-\p{Deprecated}-\p{Default_Ignorable_Code_Point}]

Let $Strongly_Restricted := [\p{Identifier_Type=Not_Character}\p{Identifier_Type=Deprecated}\p{Identifier_Type=Default_Ignorable}\p{Identifier_Type=Not_NFKC}]

\p{Identifier_Type=Not_XID} = [\P{XID_Continue}-$Strongly_Restricted-\p{Identifier_Type=Inclusion}]

# By definition, no character can have both Exclusion and Limited_Use.
\p{Identifier_Type=Exclusion} ∥ \p{Identifier_Type=Limited_Use}

\p{Identifier_Status=Allowed} = [\p{Identifier_Type=Inclusion}\p{Identifier_Type=Recommended}]
