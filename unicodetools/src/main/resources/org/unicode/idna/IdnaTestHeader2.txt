# Test cases for verifying UTS #46 conformance.
#
# FORMAT:
#
# This file is in UTF-8, where characters may be escaped using the \uXXXX or \x{XXXX}
# convention where they could otherwise have a confusing display.
# These characters include control codes and combining marks.
#
# Columns (c1, c2,...) are separated by semicolons.
# Leading and trailing spaces and tabs in each column are ignored.
# Comments are indicated with hash marks.
#
# Column 1: source -          The source string to be tested.
#                             "" means the empty string.
# Column 2: toUnicode -       The result of applying toUnicode to the source,
#                             with Transitional_Processing=false.
#                             A blank value means the same as the source value.
#                             "" means the empty string.
# Column 3: toUnicodeStatus - A set of status codes, each corresponding to a particular test.
#                             A blank value means [] (no errors).
# Column 4: toAsciiN -        The result of applying toASCII to the source,
#                             with Transitional_Processing=false.
#                             A blank value means the same as the toUnicode value.
#                             "" means the empty string.
# Column 5: toAsciiNStatus -  A set of status codes, each corresponding to a particular test.
#                             A blank value means the same as the toUnicodeStatus value.
#                             An explicit [] means no errors.
# Column 6: toAsciiT -        The result of applying toASCII to the source,
#                             with Transitional_Processing=true.
#                             A blank value means the same as the toAsciiN value.
#                             "" means the empty string.
# Column 7: toAsciiTStatus -  A set of status codes, each corresponding to a particular test.
#                             A blank value means the same as the toAsciiNStatus value.
#                             An explicit [] means no errors.
#
# The line comments currently show visible characters that have been escaped.
#
# CONFORMANCE:
#
# To test for conformance to UTS #46, an implementation will perform the toUnicode, toAsciiN, and
# toAsciiT operations on the source string, then verify the resulting strings and relevant status
# values.
#
# If the implementation converts illegal code points into U+FFFD (as per
# https://www.unicode.org/reports/tr46/#Processing) then the string comparisons need to
# account for that by treating U+FFFD in the actual value as a wildcard when comparing to the
# expected value in the test file.
#
# A status in toUnicode, toAsciiN or toAsciiT is indicated by a value in square brackets,
# such as "[B5, B6]". In such a case, the contents is a list of status codes based on the step
# numbers in UTS #46 and IDNA2008, with the following formats.
#
#   Pn for Section 4 Processing step n
#   Vn for 4.1 Validity Criteria step n
#   U1 for UseSTD3ASCIIRules
#   An for 4.2 ToASCII step n
#   Bn for Bidi (in IDNA2008)
#   Cn for ContextJ (in IDNA2008)
#   Xn for toUnicode issues (see below)
#
# Thus C1 = Appendix A.1. ZERO WIDTH NON-JOINER, and C2 = Appendix A.2. ZERO WIDTH JOINER.
# (The CONTEXTO tests are optional for client software, and not tested here.)
#
# Implementations that allow values of particular input flags to be false would ignore
# the corresponding status codes listed in the table below when testing for errors.
#
# VerifyDnsLength:   A4_1, A4_2
# CheckHyphens:      V2, V3
# CheckJoiners:      Cn
# CheckBidi:         Bn
# UseSTD3ASCIIRules: U1
#
# Implementations that cannot work with ill-formed strings would skip test cases that contain them.
# For example, the status code A3 is set for a Punycode encoding error,
# which may be due to an unpaired surrogate.
#
# Implementations may be more strict than the default settings for UTS #46.
# In particular, an implementation conformant to IDNA2008 would skip any line in this test file that
# contained a character in the toUnicode field that has the IDNA2008 Status value NV8 or XV8
# in IdnaMappingTable.txt.
# For example, it would skip a line containing ¢ (U+00A2 CENT SIGN) in the toUnicode field, 
# because of the following line in IdnaMappingTable.txt:
#
# 00A1..00A7    ; valid                  ;      ; NV8    # 1.1  INVERTED EXCLAMATION MARK..SECTION SIGN
#
# Implementations need only record that there is an error: they need not reproduce the
# precise status codes (after removing the ignored status values).
#
# Compatibility errors
#
# The special error code X4_2 is now returned where a toASCII error code
# was formerly being generated in toUnicode due to an empty label:
# A4_2 was being generated for an empty label in CheckBidi (in addition to A4_2’s normal usage).
# ============================================================================================
