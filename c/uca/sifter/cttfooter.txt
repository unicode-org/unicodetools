
% Weights for Hangul syllables are built by equivalences to the sequence of
%   corresponding jamo weights for the characters U+1100..U+11F9.

% <UAC00>..<UD7A3> <SAC00>..<SD7A3>;<BASE>;<MIN>;<SFFFF> % Hangul

% A Hangul tailoring for a system which does not use conjoining jamos
%   may choose to simply weight the Hangul syllables directly as shown above.

% Further tailoring for Hangul may be required to get syllabic weightings
%   for compatibility characters involving jamos to match expectations.

% Weights for unified Han characters follow the Unified Repertoire and
%   Ordering, which is a language-neutral, traditional radical-stroke order.

%   The original URO and Extensions A through I, plus the 12 unified Han characters
%   in the CJK compatibility area are weighted implicitly as defined here.

%   WEIGHT_BASE = 0xFB40 for original URO and 12 unified Han from CJK compat area.
%      cp >= 0x04E00 && cp <= 0x09FFF % URO
%   WEIGHT_BASE = 0xFB80 for Extension A through Extension I Han characters.
%      cp >= 0x03400 && cp <= 0x04DBF % Ext. A
%      cp >= 0x20000 && cp <= 0x2A6DF % Ext. B
%      cp >= 0x2A700 && cp <= 0x2B739 % Ext. C
%      cp >= 0x2B740 && cp <= 0x2B81D % Ext. D
%      cp >= 0x2B820 && cp <= 0x2CEA1 % Ext. E
%      cp >= 0x2CEB0 && cp <= 0x2EBE0 % Ext. F
%      cp >= 0x2EBF0 && cp <= 0x2EE4A % Ext. I
%      cp >= 0x30000 && cp <= 0x3134A % Ext. G
%      cp >= 0x31350 && cp <= 0x323AF % Ext. H
%   For a given Han character at code point cp:
%   base1 = WEIGHT_BASE + ( cp >> 15 )
%   base2 = ( cp & 0x7FFF ) | 0x8000
%   Then weight the character as: <U{cp}> "<R{base1}><T{base2}>";<BASE>;<MIN>;<SFFFF>

% Tangut ideographic and component characters are weighted implicitly as defined here.

%   WEIGHT_BASE = 0xFB00
%      cp >= 0x17000 && cp <= 0x187F7 % Tangut ideographs
%      cp >= 0x18800 && cp <= 0x18AFF % Tangut components
%      cp >= 0x18D00 && cp <= 0x18D08 % Tangut ideograph supplement
%   For a given Tangut character at code point cp:
%   base1 = WEIGHT_BASE
%   base2 = ( cp - 0x17000 ) | 0x8000
%   Then weight the character as: <U{cp}> "<R{base1}><T{base2}>";<BASE>;<MIN>;<SFFFF>

% Nushu ideographic characters are weighted implicitly as defined here.

%   WEIGHT_BASE = 0xFB01
%      cp >= 0x1B170 && cp <= 0x1B2FB % Nushu
%   For a given Nushu character at code point cp:
%   base1 = WEIGHT_BASE
%   base2 = ( cp - 0x1B170 ) | 0x8000
%   Then weight the character as: <U{cp}> "<R{base1}><T{base2}>";<BASE>;<MIN>;<SFFFF>

% Khitan Small Script ideographic characters are weighted implicitly as defined here.

%   WEIGHT_BASE = 0xFB02
%      cp >= 0x18B00 && cp <= 0x18CD5 % Khitan Small Script
%   For a given Khitan Small Script character at code point cp:
%   base1 = WEIGHT_BASE
%   base2 = ( cp - 0x18B00 ) | 0x8000
%   Then weight the character as: <U{cp}> "<R{base1}><T{base2}>";<BASE>;<MIN>;<SFFFF>

% Any other code points not explicitly mentioned in the table are weighted implicitly
%   as defined here.

%   WEIGHT_BASE = 0xFBC0
%   For code point cp:
%   base1 = WEIGHT_BASE + ( cp >> 15 )
%   base2 = ( cp & 0x7FFF ) | 0x8000
%   Then weight the character as: <U{cp}> "<R{base1}><T{base2}>";<BASE>;<MIN>;<SFFFF>

order_end

% END LC_COLLATE

% Decomment the line above to create a 14652-style
%   LC_COLLATE definition.

